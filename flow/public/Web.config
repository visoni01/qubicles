<?xml version="1.0" encoding="UTF-8"?>
<!--   
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=152368
  -->                  
<configuration> 
  <configSections>    
    <section name="beitmemcached" type="System.Configuration.NameValueSectionHandler" />
  </configSections> 
  <beitmemcached> 
    <!-- Local --> 
    <add key="Memcached" value="cache-usa-east.hfc7t3.0001.use1.cache.amazonaws.com:11211" />
  </beitmemcached>
  <connectionStrings>
    <!-- Local 2 -->
    <add name="xDB" connectionString="server=pdb.usa.east.fenero.com;User Id=fc2engine;password=asterisk;database=asterisk;charset=utf8" />
    <add name="xReports" connectionString="server=pdb.usa.east.fenero.com;User Id=fc2engine;password=asterisk;database=reporting;charset=utf8" />
    <add name="xSlaveDB" connectionString="server={0};User Id=fc2engine;password=asterisk;database=asterisk;charset=utf8" />
    <add name="xSlaveReportsDB" connectionString="server={0};User Id=fc2engine;password=asterisk;database=reporting;charset=utf8" />
  </connectionStrings>
  <appSettings>
    <!-- QuickBooks ONLINE: -->
    <add key="qbo_applicationToken" value="dec3f1fdb795eb4471badd0ba1d593688b52"/>
    <add key="qbo_consumerKey" value="qyprdIMWCbKBTBS8IkkNh4cQFmVwhi"/>
    <add key="qbo_consumerSecret" value="uc28r92gcPOEqjJT8jnlxL8Uoc9iJLCY6H5Hlw4J"/>
    <!-- END QuickBooks ONLINE: -->

    <!--- integration access items for 3rd party solutions -->
    <add key="n2pAPIClientID" value="315686221" />
    <add key="n2pAPILogin" value="fenero_api_user" />
    <add key="n2pAPIPwd" value="fEnEr0720!" />
    <add key="n2pAPIServiceAccount" value="5163837686" />
    <add key="awsAccessKeyId" value="AKIAI4YPST4Y63JOVZ7A" />
    <add key="awsSecretAccessKey" value="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" />
    <add key="awsHostedZoneId" value="Z34PF3H97EM7JS" />
    <add key="salesForceClientId" value="3MVG9fMtCkV6eLhdOCX5vi2dkB96RBfoiGrab39GFyp6gsqXi1vrLVkTIPtQjUbRcMDzQ2k05qyI16EbHaMym" />
    <add key="salesForceClientSecret" value="5876108946633054529" />
    <add key="salesForceUser" value="support@fenero.com" />
    <add key="salesForcePass" value="100BiscaynewFh2Kz6WUYRZRg3tU4LgBNnx0" />
    <add key="mailChimpToken" value="43bb8b9bda029cff238847cae7acf9c5-us7" />
    <add key="PPidentityToken" value="HLChhRy3QNUZ5cCNQCvKzSBqEsTs_tAQtRfkPDxJU0ATzhZQvmz_WX54l3W" />
    <add key="PPtxURL" value="https://www.paypal.com/cgi-bin/webscr" />

    <!--- general app settings -->
    <add key="ftpNFSPath" value="ftp.usa.east.fenero.com" />
    <add key="MonoAspnetInhibitSettingsMap" value="blahblah" />
    <add key="webpages:Version" value="1.0.0.0" />
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
    <add key="loginUrl" value="~/Account/LogOn" />
    <add key="soundSFTPUser" value="fc2soundmgr" />
    <add key="soundSFTPPass" value="asterisk" />
    <add key="soundSFTPPort" value="22915" />
    <add key="productName" value="Fenero Contact Center" />
    <add key="webChatButtonCodeTemplate" value="&lt;!-- fenero chat button -->&lt;a href=&quot;https://cloud.fenero.com/chat/client.php?locale={2}&amp;style=silver&amp;group={0}&quot; target=&quot;_blank&quot; onclick=&quot;if(navigator.userAgent.toLowerCase().indexOf('opera') != -1 &amp;&amp; window.event.preventDefault) window.event.preventDefault();this.newWindow = window.open('https://cloud.fenero.com/chat/client.php?locale={2}&amp;style=silver&amp;group={0}&amp;url='+escape(document.location.href)+'&amp;referrer='+escape(document.referrer), 'fc2chat', 'toolbar=0,scrollbars=0,location=0,status=1,menubar=0,width=640,height=480,resizable=1');this.newWindow.focus();this.newWindow.opener=window;return false;&quot;>&lt;img src=&quot;{1}&quot; border=&quot;0&quot; alt=&quot;&quot;/>&lt;/a>&lt;!-- / fenero chat button -->" />
    <!-- 
      SQL statements for some model objects in library to help speed up queries...
      
      TO DO: To ensure code doesn't break by adding fields in backend
      should consider changing SELECT * to SELECT, field1, field2, etc
    -->
    <add key="Model.Recording.GetRecordingsCount" value="SELECT Count(*) FROM {0} WHERE start_time + INTERVAL -5.00 HOUR &gt;= '{1}' AND end_time + INTERVAL -5.00 HOUR &lt;= '{2}'" />
    <add key="Model.Recording.GetRecordings" value="SELECT recording_id,server_ip,start_time + INTERVAL -5.00 HOUR start_time,end_time + INTERVAL -5.00 HOUR end_time,length_in_sec,location,lead_id,user,is_outbound,campaign_id,phone_number,status,call_start + INTERVAL -5.00 HOUR call_start,call_end + INTERVAL -5.00 HOUR call_end,uniqueid,full_name,campaign_name,status_name,client_id,client_name&#xA; FROM {0} WHERE start_time + INTERVAL -5.00 HOUR &gt;= '{1}' AND end_time + INTERVAL -5.00 HOUR &lt;= '{2}'" />
    <add key="Model.Recording.GetRecordingByID" value="SELECT * FROM {0} WHERE recording_id = '{1}'" />
    <add key="Model.LiveInboundLog.GetLiveIVRLogEntry" value="SELECT * FROM {0} WHERE uniqueid = '{1}' ORDER BY start_time DESC LIMIT 1" />
    <add key="Model.AutoCall.GetCallsInQueue" value="SELECT * FROM {0} WHERE status = 'LIVE'" />
    <add key="Model.AutoCall.GetCallsInSystem" value="SELECT * FROM {0}" />
    <add key="Model.AutoCall.GetCallsInIVR" value="SELECT DISTINCT a.* FROM x_log_did d JOIN x_live_calls a ON d.uniqueid = a.uniqueid JOIN x_client_dids cd on cd.did_id = d.did_id WHERE a.status = 'IVR' AND cd.client_id = {0}" />
    <add key="Model.AutoCall.GetCallsInAgentTransferQueue" value="SELECT DISTINCT a.* FROM x_log_did d JOIN x_live_calls a ON d.uniqueid = a.uniqueid JOIN x_client_dids cd on cd.did_id = d.did_id WHERE a.status = 'LIVE' AND a.campaign_id = 'AGENTDIRECT' AND cd.client_id = {0}" />
    <add key="Model.User.GetUserByUsername" value="SELECT * FROM {0} WHERE user = '{1}'" />
    <add key="Model.User.GetUserByUserID" value="SELECT * FROM {0} WHERE user_id = '{1}'" />
    <add key="Model.User.GetUserByPattern" value="SELECT * FROM {0} WHERE user LIKE '%{1}%' OR full_name LIKE '%{1}%'" />
    <add key="Model.User.GetUsersByUserLevel" value="SELECT * FROM {0} WHERE user_level = '{1}'" />
    <add key="Model.User.GetUsersByClient" value="SELECT t.* FROM {0} t JOIN x_client_users x ON x.user_id = t.user_id WHERE x.client_id = '{1}'" />
    <add key="Model.UserGroup.GetUserGroupsByClient" value="SELECT ug.* FROM {0} ug JOIN x_client_users xu ON ug.user_group = xu.user_id WHERE xu.client_id = '{1}'" />
    <add key="Model.UserGroup.GetUserGroupsByCampaign" value="SELECT ug.* FROM {0} ug JOIN x_client_users xu ON ug.user_group = xu.user_id WHERE xu.client_id = '{1}' and ug.allowed_campaigns LIKE '%{2}%'" />
    <add key="Model.UserGroup.GetUserGroupByID" value="SELECT ug.* FROM {0} ug WHERE ug.user_group = '{1}' LIMIT 1" />
    <add key="Model.ClientUser.GetClientUsersByClient" value="SELECT t.* FROM {0} t WHERE t.client_id = '{1}'" />
    <add key="Model.Team.GetTeamsByClient" value="SELECT t.* FROM {0} t WHERE t.client_id = '{1}'" />
    <add key="Model.Campaign.GetCampaignByCampaignID" value="SELECT * FROM {0} WHERE campaign_id = '{1}'" />
    <add key="Model.Campaign.GetCIDAreaCodes" value="SELECT * FROM {0} WHERE campaign_id = '{1}'" />
    <add key="Model.Campaign.GetPauseCodes" value="SELECT * FROM {0} WHERE campaign_id = '{1}'" />
    <add key="Model.Campaign.GetLeadRecycle" value="SELECT * FROM {0} WHERE campaign_id = '{1}'" />
    <add key="Model.Campaign.GetCampaignsByClient" value="SELECT t.* FROM {0} t JOIN x_client_campaigns x ON t.campaign_id = x.campaign_id WHERE x.client_id = '{1}'" />
    <add key="Model.Campaign.GetCampaignAgentsByCampaign" value="SELECT * FROM {0} WHERE campaign_id = '{1}'" />
    <add key="Model.Campaign.GetCampaignStatusesByCampaign" value="SELECT * FROM {0} WHERE campaign_id = '{1}'" />
    <add key="Model.InboundGroup.GetInboundGroupByGroupID" value="SELECT * FROM {0} WHERE group_id = '{1}'" />
    <add key="Model.InboundGroup.GetGroupsByClient" value="SELECT t.* FROM {0} t JOIN x_client_ingroups x ON t.group_id = x.group_id WHERE x.client_id = '{1}'" />
    <add key="Model.InboundDID.GetByClient" value="SELECT t.* FROM {0} t JOIN x_client_dids x ON t.did_id = x.did_id WHERE x.client_id = '{1}'" />
    <add key="Model.InboundDID.GetDID_IDsByClient" value="SELECT t.* FROM {0} t WHERE t.client_id = '{1}'" />
    <add key="Model.ImportTemplate.GetImportTemplatesByClient" value="SELECT * FROM {0} WHERE client_id = '{1}'" />
    <add key="Model.LiveAgent.GetLiveAgentsByCampaignId" value="SELECT * FROM {0} WHERE campaign_id IN ({1})" />
    <add key="Model.LiveAgent.GetLiveAgentById" value="SELECT * FROM {0} WHERE live_agent_id = '{1}'" />
    <add key="Model.LiveAgent.GetLiveAgents" value="SELECT * FROM {0}" />
    <add key="Model.Sound.GetSoundsByClient" value="SELECT * FROM {0} WHERE client_id='{1}'" />
    <add key="Model.Voicemail.GetVoicemailsByClient" value="SELECT * FROM {0} WHERE client_id='{1}'" />
    <add key="Model.Phone.GetPhonesByClient" value="SELECT * FROM {0} WHERE company='{1}'" />
    <add key="Model.Phone.GetPhonesByServer" value="SELECT * FROM {0} WHERE server_ip='{1}'" />
    <add key="Model.LiveInboundAgent.DeleteLiveInboundAgentsForUser" value="DELETE FROM x_live_inbound_agents where user='{0}'" />
    <add key="Model.Lists.GetListsFieldsByList" value="SELECT * FROM {0} WHERE list_id = '{1}' order by field_rank" />
    <add key="Model.Lists.GetListsFieldsById" value="SELECT * FROM {0} WHERE field_id = '{1}'" />
    <add key="Model.Lists.GetListsByListID" value="SELECT * FROM {0} WHERE list_id = '{1}'" />
    <add key="Model.Lists.GetListsByCampaignID" value="SELECT * FROM {0} WHERE campaign_id = '{1}'" />
    <add key="Model.Lists.GetListsByClientID" value="SELECT li.* FROM {0} li JOIN x_client_campaigns xc ON li.campaign_id = xc.campaign_id WHERE xc.client_id = '{1}'" />
    <add key="Model.Lists.DeleteListByListID" value="DELETE FROM {1} WHERE list_id = '{0}'" />
    <!---<add key="Model.Lists.GetListsPenetrationCount" value="SELECT COUNT(*) FROM {2} l JOIN x_statuses_all s ON s.status = l.status WHERE l.list_id = '{0}' AND s.campaign_id = '{1}' AND s.unworkable = 'Y'" />-->
    <add key="Model.Lists.GetListsPenetrationCount" value="SELECT COUNT(*) FROM {2} l, x_statuses_all s  WHERE l.list_id = '{0}' AND s.status != 'NEW' AND s.status = l.status AND (s.campaign_id = '{1}' or s.campaign_id is null)" />
    <add key="Model.Lists.GetListsAMDCount" value="SELECT COUNT(*) FROM {1} WHERE status IN ('A', 'AA') AND list_id = '{0}'" />
    <add key="Model.Lists.GetListsNACount" value="SELECT COUNT(*) FROM {1} WHERE status IN ('N', 'NA') AND list_id = '{0}'" />
    <add key="Model.Lists.GetListsNEWCount" value="SELECT COUNT(*) FROM {1} WHERE status IN ('NEW') AND list_id = '{0}'" />
    <add key="Model.Lists.GetListsRecordCount" value="SELECT COUNT(*) FROM {1} WHERE list_id = '{0}'" />
    <add key="Model.Lists.GetNextListID" value="SELECT MAX(list_id)+1 FROM x_leads_lists" />
    <add key="Model.List.GetListByLeadID" value="SELECT * FROM {0} WHERE lead_id = '{1}'" />
    <add key="Model.List.UpdateListRankByStatus" value="UPDATE {3} SET rank = '{0}' WHERE list_id = '{1}' AND status = '{2}'" />
    <add key="Model.List.GetHopperCount" value="SELECT COUNT(*) FROM {1} WHERE campaign_id IN ({0})" />
    <add key="Model.List.GetListByPhoneAndListID" value="SELECT * FROM {0} WHERE list_id = '{1}' AND phone_number = '{2}' LIMIT 1" />
    <add key="Model.List.GetListByListID" value="SELECT * FROM {0} WHERE list_id = '{1}'" />
    <add key="Model.List.GetListArchiveByListID" value="SELECT * FROM {0}_archive WHERE list_id = '{1}'" />
    <add key="Model.List.GetListByPhone" value="SELECT * FROM {0} WHERE phone_number = '{1}' LIMIT 100" />
    <add key="Model.List.GetListByDateRange" value="SELECT * FROM {0} WHERE (last_local_call_time &gt;= '{1}' AND last_local_call_time &lt;= '{2}') OR (entry_date &gt;= '{1}' AND entry_date &lt;= '{2}')" />
    <add key="Model.List.GetListStatsGroupByStatus" value="SELECT s.status,status_name,l.rank,count(*) total_records FROM {0} l, x_leads_lists li, x_statuses_all s WHERE l.list_id='{1}' AND li.list_id = l.list_id AND s.status=l.status AND (s.campaign_id = li.campaign_id OR s.campaign_id IS NULL) GROUP BY s.status,l.rank ORDER BY s.status,l.rank" />
    <add key="Model.List.GetListStatsGroupByPerformance" value="SELECT list_name,count(l.lead_id) total_records, sum(case when s.unworkable = 'Y' then 1 else 0 end) finalized, count(l.lead_id)-sum(case when s.unworkable = 'Y' then 1 else 0 end) dialable, sum(case when s.sale = 'Y' then 1 else 0 end) sales, sum(case when s.customer_contact = 'Y' then 1 else 0 end) rpc FROM {0} l, x_leads_lists li, x_statuses_all s WHERE l.list_id='{1}' AND li.list_id = l.list_id AND s.status=l.status AND (s.campaign_id = li.campaign_id OR s.campaign_id IS NULL) GROUP BY list_name" />
    <add key="Model.List.GetListStatsGroupByGMT" value="SELECT gmt_offset_now,count(*) total_records FROM {0} WHERE list_id='{1}' GROUP BY gmt_offset_now ORDER BY gmt_offset_now" />
    <add key="Model.List.GetListStatsGroupByCalledCount" value="SELECT s.status,status_name,called_count,count(*) total_records FROM {0} l, x_leads_lists li, x_statuses_all s WHERE l.list_id='{1}' AND li.list_id = l.list_id AND s.status=l.status AND (s.campaign_id = li.campaign_id OR s.campaign_id IS NULL) GROUP BY s.status,called_count ORDER BY s.status,called_count" />
    <add key="Model.EmailList.DeleteEmailListByEmailAccountID" value="DELETE FROM x_leads_email WHERE email_account_id = '{0}'" />
    <add key="Model.EmailList.GetEmailStatsGroupByStatus" value="SELECT s.status,status_name,count(*) total_records FROM {0} l, x_leads_lists li, x_statuses_all s WHERE email_account_id='{1}' AND li.list_id = l.list_id AND s.status=l.status AND (s.campaign_id = li.campaign_id OR s.campaign_id IS NULL) GROUP BY s.status ORDER BY s.status" />
    <add key="Model.EmailList.GetEmailListRecordCount" value="SELECT COUNT(*) FROM x_leads_email WHERE email_account_id = '{0}'" />
    <add key="Model.EmailList.GetEmailListByRowID" value="SELECT * FROM {0} WHERE email_row_id = '{1}'" />
    <add key="Model.EmailLog.GetEmailLogForContactByRowId" value="SELECT * FROM {0} WHERE email_row_id = '{1}'" />
    <add key="Model.BaseModel.GetGenericCount" value="SELECT COUNT(*) FROM {0}" />
    <add key="Model.InboundGroupAgent.GetInboundGroupAgent" value="SELECT * FROM {0} WHERE user = '{1}' and group_id = '{2}'" />
    <add key="Model.InboundGroupAgent.GetInboundGroupAgents" value="SELECT * FROM {0} WHERE user = '{1}'" />
    <add key="Model.CampaignAgent.GetCampaignAgent" value="SELECT * FROM {0} WHERE user = '{1}' and campaign_id = '{2}'" />
    <add key="Model.CampaignAgent.GetCampaignAgents" value="SELECT * FROM {0} WHERE user = '{1}'" />
    <add key="Model.PauseCode.GetPauseCodeByCampaignAndID" value="SELECT * FROM {0} WHERE pause_code = '{1}' AND campaign_id = '{2}'" />
    <add key="Model.AgentLog.GetAgentLogLastEntry" value="SELECT * FROM {0} WHERE user = '{1}' ORDER BY agent_log_id DESC LIMIT 1" />
    <add key="Model.AgentLog.GetAgentLogByID" value="SELECT * FROM {0} WHERE agent_log_id = '{1}'" />
    <add key="Model.AgentLog.GetAgentLogForUserByDates" value="SELECT user,event_time,lead_id,campaign_id,pause_sec,wait_sec,talk_sec,dispo_sec,dead_sec,status,sub_status,user_group FROM {0} WHERE user='{1}' AND event_time &gt;= '{2}' AND event_time &lt;= '{3}' AND ( (pause_sec &gt; 0) or (wait_sec &gt; 0) or (talk_sec &gt; 0) or (dispo_sec &gt; 0) ) UNION SELECT user,event_time,lead_id,campaign_id,pause_sec,wait_sec,talk_sec,dispo_sec,dead_sec,status,sub_status,user_group FROM {0}_archive WHERE user='{1}' AND event_time &gt;= '{2}' AND event_time &lt;= '{3}' AND ( (pause_sec &gt; 0) or (wait_sec &gt; 0) or (talk_sec &gt; 0) or (dispo_sec &gt; 0) ) ORDER BY event_time DESC LIMIT 100" />
    <add key="Model.AgentLog.GetPausedAgentStatus" value="SELECT a.agent_log_id, a.sub_status, LOWER(a.campaign_id) as campaign_id FROM {0} l JOIN x_log_agent a ON a.agent_log_id = l.agent_log_id WHERE l.status = 'PAUSED' AND a.sub_status IS NOT NULL" />
    <add key="Model.AgentLog.GetAgentTalkTime" value="SELECT a.agent_log_id, a.user, a.talk_sec, LOWER(a.campaign_id) as campaign_id FROM x_log_agent a WHERE a.campaign_id IN ({0}) AND a.talk_sec &gt; 0 AND a.event_time + INTERVAL -5 HOUR &gt;= '{1}'" />
    <add key="Model.UserLog.GetUserLogForUserByDates" value="SELECT user,event,event_date,campaign_id,user_group,session_id,server_ip,extension,computer_ip FROM {0} WHERE user='{1}' AND event_date &gt;= '{2}' AND event_date &lt;= '{3}' ORDER BY event_date" />
    <add key="Model.CloserLog.GetCloserLogForUserByDates" value="SELECT user,call_date,length_in_sec,status,phone_number,campaign_id,queue_seconds,list_id,lead_id,term_reason FROM {0} WHERE user='{1}' AND call_date &gt;= '{2}' AND call_date &lt;= '{3}' UNION SELECT user,call_date,length_in_sec,status,phone_number,campaign_id,queue_seconds,list_id,lead_id,term_reason FROM {0}_archive WHERE user='{1}' AND call_date &gt;= '{2}' AND call_date &lt;= '{3}' ORDER BY call_date desc LIMIT 100" />
    <add key="Model.CloserLog.GetCampaignStatusLogHistoryCount" value="SELECT COUNT(*) FROM {0} WHERE campaign_id='{1}' and status = '{2}'" />
    <add key="Model.UserCloserLog.GetCloserLogForUserByDates" value="SELECT user,campaign_id,event_date,blended,closer_campaigns,manager_change FROM {0} WHERE user='{1}' AND event_date &gt;= '{2}' AND event_date &lt;= '{3}' UNION SELECT user,campaign_id,event_date,blended,closer_campaigns,manager_change FROM {0}_archive WHERE user='{1}' AND event_date &gt;= '{2}' AND event_date &lt;= '{3}' ORDER BY event_date desc LIMIT 100" />
    <add key="Model.Log.GetLogForUserByDates" value="SELECT uniqueid,lead_id,list_id,campaign_id,call_date,start_epoch,end_epoch,length_in_sec,status,phone_code,phone_number,user,comments,processed,user_group,term_reason,alt_dial FROM {0} WHERE user='{1}' AND call_date &gt;= '{2}' AND call_date &lt;= '{3}' UNION SELECT uniqueid,lead_id,list_id,campaign_id,call_date,start_epoch,end_epoch,length_in_sec,status,phone_code,phone_number,user,comments,processed,user_group,term_reason,alt_dial FROM x_log_outbound_archive WHERE user='{1}' AND call_date &gt;= '{2}' AND call_date &lt;= '{3}' ORDER BY call_date desc LIMIT 100" />
    <add key="Model.Log.GetCampaignLogHistoryCount" value="SELECT COUNT(*) FROM {0} WHERE campaign_id='{1}'" />
    <add key="Model.Log.GetCampaignStatusLogHistoryCount" value="SELECT COUNT(*) FROM {0} WHERE campaign_id='{1}' and status = '{2}'" />
    <add key="Model.UserCallLog.GetUserCallLogForUserByDates" value="SELECT user,call_date,call_type,server_ip,phone_number,number_dialed,lead_id,callerid,group_alias_id,preset_name,customer_hungup,customer_hungup_seconds FROM {0} WHERE user='{1}' AND call_date &gt;= '{2}' AND call_date &lt;= '{3}' ORDER BY call_date desc LIMIT 100" />
    <add key="Model.RecordingLog.GetRecordingLogForUserByDates" value="SELECT recording_id,channel,server_ip,extension,start_time,start_epoch,end_time,end_epoch,length_in_sec,length_in_min,filename,location,lead_id,user,vicidial_id FROM {0} WHERE user='{1}' AND start_time &gt;= '{2}' AND start_time &lt;= '{3}' UNION SELECT recording_id,channel,server_ip,extension,start_time,start_epoch,end_time,end_epoch,length_in_sec,length_in_min,filename,location,lead_id,user,vicidial_id FROM {0}_historical WHERE user='{1}' AND start_time &gt;= '{2}' AND start_time &lt;= '{3}' ORDER BY recording_id DESC LIMIT 100" />
    <add key="Model.CloserLog.GetCloserLogForContactByDates" value="SELECT user,call_date,length_in_sec,status,phone_number,campaign_id,queue_seconds,list_id,lead_id,term_reason FROM {0} WHERE lead_id='{1}' AND call_date &gt;= '{2}' AND call_date &lt;= '{3}' UNION SELECT user,call_date,length_in_sec,status,phone_number,campaign_id,queue_seconds,list_id,lead_id,term_reason FROM {0}_archive WHERE lead_id='{1}' AND call_date &gt;= '{2}' AND call_date &lt;= '{3}' ORDER BY call_date desc LIMIT 100" />
    <add key="Model.CloserLog.GetCloserLogForContactByLeadId" value="SELECT user,call_date,length_in_sec,status,phone_number,campaign_id,queue_seconds,list_id,lead_id,term_reason FROM {0} WHERE lead_id='{1}' UNION SELECT user,call_date,length_in_sec,status,phone_number,campaign_id,queue_seconds,list_id,lead_id,term_reason FROM {0}_archive WHERE lead_id='{1}' ORDER BY call_date desc LIMIT 100" />
    <add key="Model.Log.GetLogForContactByDates" value="SELECT uniqueid,lead_id,list_id,campaign_id,call_date,start_epoch,end_epoch,length_in_sec,status,phone_code,phone_number,user,comments,processed,user_group,term_reason,alt_dial FROM {0} WHERE lead_id='{1}' AND call_date &gt;= '{2}' AND call_date &lt;= '{3}' UNION SELECT uniqueid,lead_id,list_id,campaign_id,call_date,start_epoch,end_epoch,length_in_sec,status,phone_code,phone_number,user,comments,processed,user_group,term_reason,alt_dial FROM x_log_outbound_archive WHERE lead_id='{1}' AND call_date &gt;= '{2}' AND call_date &lt;= '{3}' ORDER BY call_date desc LIMIT 100" />
    <add key="Model.UserCallLog.GetUserCallLogForContactByDates" value="SELECT user,call_date,call_type,server_ip,phone_number,number_dialed,lead_id,callerid,group_alias_id,preset_name,customer_hungup,customer_hungup_seconds FROM {0} WHERE lead_id='{1}' AND call_date &gt;= '{2}' AND call_date &lt;= '{3}' UNION SELECT user,call_date,call_type,server_ip,phone_number,number_dialed,lead_id,callerid,group_alias_id,preset_name,customer_hungup,customer_hungup_seconds FROM user_call_log_archive WHERE lead_id='{1}' AND call_date &gt;= '{2}' AND call_date &lt;= '{3}' ORDER BY call_date desc LIMIT 100" />
    <add key="Model.RecordingLog.GetRecordingLogForContactByDates" value="SELECT recording_id,channel,server_ip,extension,start_time,start_epoch,end_time,end_epoch,length_in_sec,length_in_min,filename,location,lead_id,user,vicidial_id FROM {0} WHERE lead_id='{1}' AND start_time &gt;= '{2}' AND start_time &lt;= '{3}' UNION SELECT recording_id,channel,server_ip,extension,start_time,start_epoch,end_time,end_epoch,length_in_sec,length_in_min,filename,location,lead_id,user,vicidial_id FROM {0}_historical WHERE lead_id='{1}' AND start_time &gt;= '{2}' AND start_time &lt;= '{3}' ORDER BY recording_id DESC LIMIT 100" />
    <add key="Model.Phone.GetPhoneByExtension" value="SELECT * FROM {0} WHERE extension = '{1}'" />
    <add key="Model.XClientPayment.GetMinutesUsed" value="SELECT DATE_FORMAT(`Call Date`,'%b %e %Y') CallDate, SUM(`Call Time`) / 60 CallTime, SUM(`Bill Time`) / 60 BillTime, SUM(`Cost`) Cost FROM cdr WHERE ClientID = {0} AND Cost &gt; 0 GROUP BY DATE_FORMAT(`Call Date`,'%b %y');" />
    <add key="Model.XClientPayment.GetMinutesUsedSummary" value="SELECT SUM(`Bill Time`) / 60 BillTime, SUM(`Cost`) Cost FROM cdr WHERE ClientID = {0} AND Cost &gt; 0;" />
    <add key="Model.Voicemail.GetNextVoicemailID" value="SELECT MAX(CONVERT(voicemail_id, signed int))+1 FROM x_voicemail;" />
    <add key="Model.StatusQuota.GetStatusQuotaSTANDARDFieldCount" value="SELECT COUNT(*) FROM {4} WHERE {0}='{1}' and status = '{2}' and list_id = '{3}'" />
    <add key="Model.StatusQuota.GetStatusQuotaCUSTOMFieldCount" value="SELECT COUNT(*) FROM {4} l JOIN x_leads_custom_{3} c ON c.lead_id = l.lead_id WHERE c.{0}='{1}' and l.status = '{2}' and l.list_id = '{3}'" />
 </appSettings>    
  <system.web>
    <!-- Support upload of up to 500MB and request execution time up to 12 hrs -->
    <httpRuntime maxRequestLength="512000" executionTimeout="43200" />
    <authentication mode="Forms">
      <forms loginUrl="~/Account/LogOn" timeout="720" />
    </authentication> 
    <customErrors mode="Off" defaultRedirect="~/Account/brb">
    </customErrors>
    <compilation debug="true" targetFramework="4.0">
      <assemblies>
        <add assembly="Microsoft.CSharp, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
        <add assembly="System.Web.DynamicData, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
        <add assembly="System.Web.ApplicationServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
        <add assembly="System.ComponentModel.DataAnnotations, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
        <add assembly="System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
        <add assembly="System.Data.DataSetExtensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
        <add assembly="System.Xml.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
        <add assembly="System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
        <add assembly="System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
        <add assembly="System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" />
      </assemblies>
    </compilation>
    <pages validateRequest="true">
      <namespaces>
        <add namespace="System.Web.Helpers" />
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Web.WebPages" />
      </namespaces>
    </pages>
    <membership defaultProvider="AspNetSqlMembershipProvider">
      <providers>
        <clear />
      </providers>
    </membership>
  </system.web>
  
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <modules runAllManagedModulesForAllRequests="true" />
    <httpErrors errorMode="Detailed" />
    <asp scriptErrorSentToBrowser="true" />
        <handlers>
            <remove name="OPTIONSVerbHandler" />
            <add name="OPTIONSVerbHandler" path="*" verb="OPTIONS" modules="IsapiModule" scriptProcessor="C:\Windows\Microsoft.NET\Framework\v4.0.30319\aspnet_isapi.dll" resourceType="Unspecified" requireAccess="None" preCondition="bitness32" />
        </handlers> 
    <security>
      <requestFiltering>
        <requestLimits maxAllowedContentLength="524288000" /> <!--500MB-->
      </requestFiltering>
    </security>
  </system.webServer>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-2.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>
